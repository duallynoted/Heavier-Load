{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/updateMemberInfoReducer.js","redux/reducers/newExerciseReducer.js","redux/reducers/measurementsReducer.js","redux/reducers/exerciseListReducer.js","redux/reducers/measurementsListReducer.js","redux/reducers/daysReducer.js","redux/reducers/newDayFormReducer.js","redux/reducers/setSelectedDayReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/updateMemberSaga.js","redux/sagas/newExerciseSaga.js","redux/sagas/measurementsSaga.js","redux/sagas/exerciseListSaga.js","redux/sagas/measurementsListSaga.js","redux/sagas/daysSaga.js","redux/sagas/newDayFormSaga.js","redux/sagas/index.js","components/NavDrawer/NavDrawer.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AboutPage/AboutPage.js","components/LogOutButton/LogOutButton.js","components/MemberInfoPop-UpEdit/MemberInfoPop-UpEdit.js","components/MemberInfoList/MemberInfoList.js","components/PositionedSnackBar/PositionedSnackBar.js","components/NewDayForm/NewDayForm.js","components/UserPage/UserPage.js","components/InfoPage/InfoPage.js","components/CustomExerciseListPop-UpEdit/CustomExerciseListPop-UpEdit.js","components/CustomExerciseListItem/CustomExerciseListItem.js","components/DaySelector/DaySelector.js","components/DaySelectorList/DaySelectorList.js","components/CustomExerciseList/CustomExerciseList.js","components/MeasurementsList/MeasurementsList.js","components/CustomExerciseForm/CustomExerciseForm.js","components/MeasurementsForm/MeasurementsForm.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","updateMemberInfoReducer","newExerciseReducer","measurementsReducer","exerciseListReducer","measurementsListReducer","daysReducer","newDayFormReducer","setSelectedDayReducer","console","log","Number","rootReducer","errors","user","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","response","status","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","updateMember","updateMemberSaga","call","concat","id","updateMemberSaga_marked","updateMemberSaga_marked2","addExercise","updateLoad","deleteExercise","addNewExercise","newExerciseSaga_marked","newExerciseSaga_marked2","delete","newExerciseSaga_marked3","_context4","_marked4","addMeasurement","addNewMeasurement","measurementsSaga_marked","measurementsSaga_marked2","fetchExercises","exerciseListSaga","Date","exerciseListSaga_marked","exerciseListSaga_marked2","fetchMeasurements","measurementsListSaga","measurementsListSaga_marked","measurementsListSaga_marked2","fetchDays","daysSaga","daysSaga_marked","daysSaga_marked2","addNewDay","addDay","newDayFormSaga_marked","newDayFormSaga_marked2","rootSaga","all","newExerciseSaga","measurementSaga","newDayFormSaga","sagas_marked","NavDrawer","left","toggleDrawer","side","open","_this","setState","Object","defineProperty","handleExerciseClick","props","history","push","handleMeasurementsClick","handleInfoClick","_this2","classes","sideList","react_default","createElement","className","list","List_default","ListItem_default","button","onClick","ListItemIcon_default","Rowing_default","ListItemText_default","primary","TrackChanges_default","Divider_default","Info_default","dispatch","VerifiedUser_default","Button_default","Menu_default","Drawer_default","onClose","tabIndex","role","onKeyDown","React","Component","navDrawerStyles","withStyles","width","fullList","navDrawerRouterStyles","withRouter","connect","Nav","root","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","components_NavDrawer_NavDrawer","Typography_default","variant","color","grow","Link","to","navStyles","flexGrow","marginLeft","marginRight","Footer","component","LoginPage","username","password","login","event","preventDefault","handleInputChangeFor","propertyName","target","value","FormControl_default","container","noValidate","autoComplete","TextField_default","label","textField","onChange","margin","name","loginStyles","theme","display","flexWrap","formControl","spacing","unit","minWidth","selectEmpty","marginTop","dense","menu","loginRouterStyles","RegisterPage","registerStyles","ComponentToShow","ComponentToProtect","otherProps","objectWithoutProperties","Route","assign","AboutPage","MemberInfoPopUpEdit","reduxState","first_name","last_name","height","weight","gender","goal","handleChangeFor","objectSpread","handleClickOpen","handleClose","updateState","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","index_es","DialogContentText_default","DialogActions_default","autoFocus","withMobileDialog","MemberInfoList","handleClick","member","Card_default","card","CardContent_default","key","title","gutterBottom","pos","CardActions_default","MemberInfoPop_UpEdit","memberInfoListCards","maxWidth","flexDirection","justifyContent","fontSize","alignText","marginBottom","PositionedSnackbar","vertical","horizontal","Snackbar_default","anchorOrigin","handleClothes","autoHideDuration","message","ContentProps","aria-describedby","NewDayForm","newDay","new_day_id","handleSubmit","PositionedSnackBar","newDayStyles","newDayRouterStyles","UserPage","logout","Paper_default","elevation","components_MemberInfoList_MemberInfoList","userPageStyles","mixins","gutters","paddingTop","paddingBottom","backgroundImage","backgroundRepeat","backgroundPositionX","backgroundPositionY","backgroundAttachment","backgroundSize","InfoPage","CustomExerciseListPopUpEdit","exercise","weight_load","rep_scheme","swalWithBootstrapButtons","swal","mixin","confirmButtonClass","cancelButtonClass","buttonsStyling","CustomExerciseListItem","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","dismiss","DismissReason","cancel","day_name","CustomExerciseListPop_UpEdit","size","Delete_default","customExerciseListItemCards","DaySelector","day_id","handleSelectExerciseDay","_callee","labelWidth","ReactDOM","findDOMNode","InputLabelRef","offsetWidth","InputLabel_default","ref","htmlFor","Select_default","MenuItem_default","map","day","daySelectorDropDown","DaySelectorList","components_DaySelector_DaySelector","Grid_default","direction","justify","alignItems","style","item","xs","md","lg","components_CustomExerciseListItem_CustomExerciseListItem","daySelectorRouterList","CustomExerciseList","components_DaySelectorList_DaySelectorList","MeasurementsList","Table_default","table","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","tableBody","measurement","body_area","measurementTable","overflowX","padding","borderRadius","CustomExerciseForm","newExercise","handleSelectChange","handleExerciseSubmit","components_NewDayForm_NewDayForm","customExerciseStyles","MeasurementsForm","newMeasurement","handleMeasurementSubmit","measurementsStyles","createMuiTheme","palette","deepOrange","secondary","lightGreen","error","red","App","MuiThemeProvider_default","HashRouter","components_Nav_Nav","Switch","Redirect","exact","from","path","components_ProtectedRoute_ProtectedRoute","render","components_Footer_Footer","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.03b1b2cb.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'If you\\'re a new user, please register. Otherwise, enter your username and password to get started.';\n    case 'LOGIN_FAILED':\n      return 'Whoops. That username and password do not match. Try again.';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Hmmm. That didn\\'t work. That username might already be taken. Try again.';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const updateMemberInfoReducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'UPDATE_MEMBER_INFO':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  // user will be on the redux state at:\n  // state.user\n  export default updateMemberInfoReducer;\n  ","const newExerciseReducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'ADD_EXERCISE':\n        return action.payload;\n      case 'DELETE_EXERCISE':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  export default newExerciseReducer;\n  ","const measurementsReducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'ADD_MEASUREMENT':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  export default measurementsReducer;\n  ","import { LOCATION_CHANGE } from 'react-router-redux';\n\nconst exerciseListReducer = (state = [], action) => {  \n  switch (action.type) {\n      case 'SET_EXERCISES':        \n      return action.payload;//COME BACK TO THIS\n      default:\n        return state;\n    }\n  };\n  \n  export default exerciseListReducer;","const measurementsListReducer = (state = [], action) => { \n    switch (action.type) {\n      case 'SET_MEASUREMENTS':       \n      return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  export default measurementsListReducer;","const daysReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_DAYS':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default daysReducer;","const newDayFormReducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'ADD_DAY':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  export default newDayFormReducer;\n  ","const setSelectedDayReducer = (state = 0, action) => {\n    console.log('SETSELECTEDDAY',action.payload);\n    switch (action.type) {\n        case 'SET_SELECTED_DAY':\n            return Number(action.payload);\n        default:\n            return state;\n    }\n};\n\nexport default setSelectedDayReducer;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport updateMemberInfoReducer from './updateMemberInfoReducer'\nimport newExerciseReducer from './newExerciseReducer';\nimport measurementsReducer from './measurementsReducer';\nimport exerciseListReducer from './exerciseListReducer';\nimport measurementsListReducer from './measurementsListReducer';\nimport daysReducer from './daysReducer';\nimport newDayFormReducer from './newDayFormReducer';\nimport setSelectedDayReducer from './setSelectedDayReducer';\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  updateMemberInfoReducer,\n  newExerciseReducer,\n  measurementsReducer,\n  exerciseListReducer,\n  measurementsListReducer,\n  daysReducer,\n  newDayFormReducer,\n  setSelectedDayReducer,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n\n    //since the id of objects are coming from user, when fetching, they must be placed\n    //in a saga so they run synchronously\n    yield put({ type: 'SET_USER', payload: response.data });\n    yield put({type: 'FETCH_EXERCISES', payload:response.data})\n    yield put({type: 'FETCH_MEASUREMENTS', payload:response.data})\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest, call } from 'redux-saga/effects';\n\n\nfunction* updateMember(action) {\n    try {\n        yield call(axios.put, `/profile/${action.payload.id}`, action.payload);\n        yield put({ type: 'FETCH_USER' });\n        console.log('ACTIONDOTPAYLOAD', action.payload);\n        \n    } catch (error) {\n        console.log('error updating member', error);\n    }\n};\n\nfunction* updateMemberSaga() {\n    yield takeLatest('UPDATE_MEMBER_INFO', updateMember);\n  }\n\nexport default updateMemberSaga;\n","import axios from 'axios';\nimport { put, takeLatest, call } from 'redux-saga/effects';\n\n\nfunction* addExercise(action) {\n    try {\n        yield call(axios.post, `/profile/${action.payload.id}`, action.payload);\n        yield put({ type: 'FETCH_USER' });\n        console.log('ACTIONDOTPAYLOAD', action.payload);\n        \n    } catch (error) {\n        console.log('error adding exercise', error);\n    }\n};\n\nfunction* updateLoad(action){\n    try {\n        yield call(axios.put, `/profile/updateload/${action.payload.id}`, action.payload);\n        yield put({ type: 'FETCH_USER' });\n        console.log('UPDATELOAD', action.payload);\n        \n    } catch (error) {\n        console.log('error updating user', error);\n    }\n}\n\nfunction* deleteExercise(action){\n    try {\n        yield call(axios.delete, `/profile/${action.payload.id}`, action.payload);\n        yield put({ type: 'FETCH_USER' });\n        console.log('DELETEEXERCISE', action.payload);\n        \n    } catch (error) {\n        console.log('error updating user', error);\n    }\n}\n\n\nfunction* addNewExercise() {\n    yield takeLatest('ADD_EXERCISE', addExercise);\n    yield takeLatest('UPDATE_LOAD', updateLoad)\n    yield takeLatest('DELETE_EXERCISE', deleteExercise)\n  }\n\nexport default addNewExercise;\n","import axios from 'axios';\nimport { put, takeLatest, call } from 'redux-saga/effects';\n\n\nfunction* addMeasurement(action) {\n    try {\n        yield call(axios.post, `/profile/measurements/${action.payload.id}`, action.payload);\n        yield put({ type: 'FETCH_USER' });\n        console.log('ACTIONDOTPAYLOAD', action.payload);\n        \n    } catch (error) {\n        console.log('error adding measurement', error);\n    }\n};\n\nfunction* addNewMeasurement() {\n    yield takeLatest('ADD_MEASUREMENT', addMeasurement);\n  }\n\nexport default addNewMeasurement;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* fetchExercises(action) {\n  try {\n    const response = yield axios.get(`/profile/${action.payload.id}`);\n    yield put({ type: 'SET_EXERCISES', payload: response.data });\n    console.log('EXERCISES: ', response.data, new Date());\n    \n  } catch (error) {\n    console.log('Exercise GET request failed', error);\n  }\n}\n\nfunction* exerciseListSaga() {\n  yield takeLatest('FETCH_EXERCISES', fetchExercises);\n}\n\nexport default exerciseListSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* fetchMeasurements(action) {\n  try {\n    const response = yield axios.get(`/profile/measurements/${action.payload.id}`);\n    yield put({ type: 'SET_MEASUREMENTS', payload: response.data });\n  \n    \n  } catch (error) {\n    console.log('Measurements GET request failed', error);\n  }\n}\n\nfunction* measurementsListSaga() {\n  yield takeLatest('FETCH_MEASUREMENTS', fetchMeasurements);\n}\n\nexport default measurementsListSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n\nfunction* fetchDays(action){\n  try{\n      const response = yield axios.get(`/profile/days/${action.payload.id}`, action.payload);\n      yield put({type: 'SET_DAYS', payload:response.data});\n      console.log('DAYS: ', response.data);\n  } catch (error) {\n      console.log('error getting days', error);        \n  }\n}\n\nfunction* daysSaga() {\n  yield takeLatest('FETCH_DAYS', fetchDays)\n\n}\n\nexport default daysSaga;\n","import axios from 'axios';\nimport { put, takeLatest, call } from 'redux-saga/effects';\n\n\nfunction* addNewDay(action) {\n    try {\n        yield call(axios.post, `/profile/days/${action.payload.id}`, action.payload);\n        yield put({ type: 'FETCH_USER' });\n        console.log('ACTIONDOTPAYLOAD', action.payload);\n        \n    } catch (error) {\n        console.log('error adding measurement', error);\n    }\n};\n\nfunction* addDay() {\n    yield takeLatest('ADD_DAY', addNewDay);\n  }\n\nexport default addDay;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport updateMemberSaga from './updateMemberSaga';\nimport newExerciseSaga from './newExerciseSaga';\nimport measurementSaga from './measurementsSaga';\nimport exerciseListSaga from './exerciseListSaga';\nimport measurementsListSaga from './measurementsListSaga';\nimport daysSaga from './daysSaga';\nimport newDayFormSaga from './newDayFormSaga';\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    updateMemberSaga(),\n    newExerciseSaga(),\n    measurementSaga(),\n    exerciseListSaga(),\n    measurementsListSaga(),\n    daysSaga(),\n    newDayFormSaga(),\n  ]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport RowingIcon from '@material-ui/icons/Rowing';\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\nimport Divider from '@material-ui/core/Divider';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst styles = {\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n};\n\nclass NavDrawer extends React.Component {\n    state = {\n        left: false,\n    };\n\n    toggleDrawer = (side, open) => () => {\n        this.setState({\n            [side]: open,\n        });\n    };\n    handleExerciseClick = () => {\n        this.props.history.push('/exercises')\n    }\n    handleMeasurementsClick = () => {\n        this.props.history.push('/measurements')\n    }\n    handleInfoClick = () => {\n        this.props.history.push('/info')\n    }\n\n    render(props) {\n        const { classes } = this.props;\n        const sideList = (\n            <div className={classes.list}>\n                <List>\n                    <ListItem button onClick={this.handleExerciseClick}>\n                        <ListItemIcon>\n                            <RowingIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Your Exercises\" />\n                    </ListItem>\n                    <ListItem button onClick={this.handleMeasurementsClick}>\n                        <ListItemIcon>\n                            <TrackChangesIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Measurements\" />\n                    </ListItem>\n                </List>\n                <Divider />\n                <List>\n                    <ListItem button onClick={this.handleInfoClick}>\n                        <ListItemIcon>\n                            <InfoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Info\" />\n                    </ListItem>\n                    <ListItem button onClick={() => this.props.dispatch({ type: 'LOGOUT' })}>\n                        <ListItemIcon>\n                            <VerifiedUserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Log Out\" />\n                    </ListItem>\n                </List>\n            </div>\n        );\n\n        return (\n            <div>\n                <Button onClick={this.toggleDrawer('left', true)}><MenuIcon /></Button>\n                <Drawer open={this.state.left} onClose={this.toggleDrawer('left', false)}>\n                    <div\n                        tabIndex={0}\n                        role=\"button\"\n                        onClick={this.toggleDrawer('left', false)}\n                        onKeyDown={this.toggleDrawer('left', false)}\n                    >\n                        {sideList}\n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nNavDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nconst mapStateToProps = state => ({\n    user: state.user,\n});\n\nconst navDrawerStyles = withStyles(styles)(NavDrawer);\n\nconst navDrawerRouterStyles = withRouter(navDrawerStyles);\n\nexport default connect(mapStateToProps)(navDrawerRouterStyles);\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './Nav.css';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport NavDrawer from '../NavDrawer/NavDrawer';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nclass Nav extends Component {\n\n  render(props) {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton className={classes.menuButton}>\n              {this.props.user.id ? <NavDrawer /> : <VerifiedUserIcon />}\n            </IconButton>\n            <Typography variant=\"h5\" color=\"inherit\" className={classes.grow}>\n              <Link className=\"nav-title\" to=\"/home\">Heavier Load</Link>\n            </Typography>\n            <div>\n              <Link to=\"/home\">\n              </Link>\n              <div className=\"nav-right\">\n                <Link className=\"nav-link\" to=\"/home\">\n                  {/* Shows Login/Register when users aren't logged in, and shows as 'Home' when they log in */}\n                  {this.props.user.id ? 'Home' : 'Login / Register'}\n                </Link>\n                <Link className=\"nav-link\" to=\"/createexercise\" >\n                  {this.props.user.id ? 'Create Exercise' : \"\"}\n                </Link>\n                <Link className=\"nav-link\" to=\"/createmeasurement\" >\n                  {this.props.user.id ? 'Create Measurement' : \"\"}\n                </Link>\n              </div>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n\n    );\n  }\n}\n\nNav.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nconst navStyles = withStyles(styles)(Nav);\n\nexport default connect(mapStateToProps)(navStyles);\n","import React from 'react';\nimport './Footer.css'\nimport Typography from '@material-ui/core/Typography';\n\n\nconst Footer = () => (\n  <Typography variant=\"h4\" component=\"h3\">\n    <footer>\n      &copy; Heavier Load\n  </footer>\n  </Typography>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 'flex',\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n      this.props.history.push('/home')\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className=\"log-in\">\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form>\n          <Typography variant=\"h4\" component=\"h3\">\n            Login\n                     </Typography>\n          <FormControl className={classes.container} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"standard-name\"\n              label=\"email address\"\n              className={classes.textField}\n              value={this.state.username}\n              onChange={this.handleInputChangeFor('username')}\n              margin=\"normal\"\n            />\n            <TextField\n              id=\"standard-name\"\n              label=\"password\"\n              type=\"password\"\n              name=\"password\"\n              className={classes.textField}\n              value={this.state.password}\n              onChange={this.handleInputChangeFor('password')}\n              margin=\"normal\"\n            />\n            <Button onClick={this.login} type=\"submit\" value='Submit' color=\"secondary\">Login</Button>\n          </FormControl>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => { this.props.dispatch({ type: 'SET_TO_REGISTER_MODE' }) }}\n          >\n            <Typography variant=\"h5\">\n              REGISTER\n                     </Typography>\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nconst loginStyles = withStyles(styles)(LoginPage)\n\nconst loginRouterStyles = withRouter(loginStyles)\n\nexport default connect(mapStateToProps)(loginRouterStyles);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 'flex',\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'REGISTRATION_INPUT_ERROR' });\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form>\n          <Typography variant=\"h5\" component=\"h2\">\n            It's Gettin' Kinda Heavy\n          </Typography>\n          <FormControl className={classes.container} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"standard-name\"\n              label=\"email address\"\n              className={classes.textField}\n              value={this.state.username}\n              onChange={this.handleInputChangeFor('username')}\n              margin=\"normal\"\n            />\n            <TextField\n              id=\"standard-name\"\n              label=\"password\"\n              type=\"password\"\n              name=\"password\"\n              className={classes.textField}\n              value={this.state.password}\n              onChange={this.handleInputChangeFor('password')}\n              margin=\"normal\"\n            />\n            <Button onClick={this.registerUser} type=\"submit\" value='Submit' color=\"primary\">Start Lifting</Button>\n          </FormControl>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => { this.props.dispatch({ type: 'SET_TO_LOGIN_MODE' }) }}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nRegisterPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nconst registerStyles = withStyles(styles)(RegisterPage)\n\n\nexport default connect(mapStateToProps)(registerStyles);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\n\nconst AboutPage = () => (\n  <div>\n    <div>\n      <p>\n      This will be filled with information about how Heavier Load works.\n      </p>\n    </div>\n  </div>\n);\n\nexport default AboutPage;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport { connect } from 'react-redux';\nimport { Typography } from '@material-ui/core';\n\nclass MemberInfoPopUpEdit extends React.Component {\n  state = {\n        open: false,\n        id: this.props.reduxState.user.id,\n        first_name: this.props.reduxState.user.first_name,\n        last_name: this.props.reduxState.user.last_name,\n        height: this.props.reduxState.user.height,\n        weight: this.props.reduxState.user.weight,\n        gender: this.props.reduxState.user.gender,\n        goal: this.props.reduxState.user.goal,\n  };\n\nhandleChangeFor = propertyName => event => {\n    this.setState({\n        ...this.state,\n        [propertyName]: event.target.value,\n    });\n}\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n\n  updateState = () => {\n    this.props.dispatch({ type: 'UPDATE_MEMBER_INFO', payload: this.state })\n    console.log('hey???')\n    this.handleClose();\n}\n\n  render() {  \n    return (\n      <div>\n          \n        <Button color=\"secondary\" className=\"button\"onClick={this.handleClickOpen}>Update Your Information</Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">{\"Update Name\"}</DialogTitle>\n          <DialogContent>\n              <Typography color=\"textSecondary\">First Name</Typography>\n            <DialogContentText>\n            <input value={this.state.first_name} onChange={this.handleChangeFor('first_name')} />\n            </DialogContentText>\n            <Typography color=\"textSecondary\">Last Name</Typography>\n            <DialogContentText>\n            <input value={this.state.last_name} onChange={this.handleChangeFor('last_name')} />\n            </DialogContentText>\n            <Typography color=\"textSecondary\">Height in inches(ex:55,73)</Typography>\n            <DialogContentText>\n            <input value={this.state.height} onChange={this.handleChangeFor('height')} />\n            </DialogContentText>\n            <Typography color=\"textSecondary\">Weight</Typography>\n            <DialogContentText>\n            <input value={this.state.weight} onChange={this.handleChangeFor('weight')} />\n            </DialogContentText>\n            <Typography color=\"textSecondary\">Gender</Typography>\n            <DialogContentText>\n            <input value={this.state.gender} onChange={this.handleChangeFor('gender')} />\n            </DialogContentText>\n            <Typography color=\"textSecondary\">Goal?</Typography>\n            <DialogContentText>\n            <input value={this.state.goal} onChange={this.handleChangeFor('goal')} />\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.updateState} color=\"primary\" autoFocus>\n              Update\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nMemberInfoPopUpEdit.propTypes = {\n  fullScreen: PropTypes.bool.isRequired,\n};\n\n\nconst mapReduxStateToProps = (reduxState) => {\n    return {\n      reduxState,\n    }\n}\n\n\nexport default connect(mapReduxStateToProps) (withMobileDialog()(MemberInfoPopUpEdit));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport MemberInfoPopUpEdit from '../MemberInfoPop-UpEdit/MemberInfoPop-UpEdit';\n\n\nconst styles = {\n    card: {\n        margin: \"auto\",\n        maxWidth: 550,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    title: {\n        fontSize: 14,\n        alignText: \"center\",\n    },\n    pos: {\n        marginBottom: 12,\n    },\n};\n\nclass MemberInfoList extends Component {\n    componentDidMount() {\n        this.props.dispatch({ type: 'FETCH_USER' })\n        console.log(this.props.reduxState.user);\n\n    }\n    handleClick = () => {\n        this.props.history.push('/profile')\n    };\n\n    render() {\n        let member = this.props.reduxState.user;\n        const { classes } = this.props;\n        return (\n            <div>\n                <Card className={classes.card}>\n                    <CardContent key={member.id}>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Member Information for {member.username}\n                        </Typography>\n                        <Typography variant=\"h2\" component=\"h2\">\n                            {member.first_name} {member.last_name}\n                        </Typography>\n                        <Typography variant=\"h5\" className={classes.pos} color=\"textSecondary\">\n                            Height:\n                        <br />\n                            {member.height}''\n                        </Typography>\n                        <Typography variant=\"h5\" className={classes.pos} color=\"textSecondary\">\n                            Weight:\n                         <br />\n                            {member.weight} lbs\n                        </Typography>\n                        <Typography component=\"p\">\n                            {member.gender}\n                            <br />\n                        </Typography>\n                        <CardActions>\n                            <MemberInfoPopUpEdit />\n                        </CardActions>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n}\n\nMemberInfoList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst memberInfoListCards = withStyles(styles)(MemberInfoList);\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nexport default connect(mapStateToProps)(memberInfoListCards);\n\n\n\n\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { withRouter } from \"react-router\";\n\n\nclass PositionedSnackbar extends React.Component {\n\n\n\n\n    render() {\n        const vertical = this.props.vertical;\n        const horizontal = this.props.horizontal\n        return (\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                open={this.props.open}\n                onClose={this.props.handleClothes}\n                autoHideDuration={3000}\n                message={this.props.message}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n\n            />\n            // </div>\n        );\n    }\n}\n\nexport default withRouter(PositionedSnackbar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport PositionedSnackBar from '../PositionedSnackBar/PositionedSnackBar';\n\n\nconst styles = theme => ({\n    root: {\n        justifyContent: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 'flex',\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n});\n\nclass NewDayForm extends Component {\n    state = {\n        newDay: {\n            name: '',\n            new_day_id: 1\n        },\n        open: false,\n        vertical: 'top',\n        horizontal: 'left',\n    };\n\n    handleChangeFor = propertyName => event => {\n        console.log('event logging')\n        this.setState({\n            newDay: {\n                ...this.state.newDay,\n                [propertyName]: event.target.value,\n            }\n        });\n    };\n\n    handleSubmit = () => {\n        this.props.dispatch({ type: 'ADD_DAY', payload: this.state.newDay })\n        this.setState({\n            ...this.state.newDay,\n            newDay: {\n                name: '',\n                new_day_id: 1\n            },\n            open: true,\n        });\n        this.props.history.push('/exercises');\n    };\n\n    handleClothes = () => {\n        this.setState({ open: false });\n    };\n\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Typography variant=\"h5\" component=\"h3\">\n                    Create Workout Days Which Hold Your Exercises\n                     </Typography>\n                <form>\n                    <FormControl className={classes.container} noValidate autoComplete=\"off\">\n                        <Typography variant=\"h6\" component=\"h3\">\n                            Create Workout Day\n                    </Typography>\n                        <TextField\n                            label=\"Tuesdays? Leg Day?\"\n                            className={classes.textField}\n                            value={this.state.newDay.name}\n                            onChange={this.handleChangeFor('name')}\n                            margin=\"normal\"\n                        />\n                        <Button onClick={this.handleSubmit} type=\"submit\" value='Submit' color=\"primary\">Add Day</Button>\n                    </FormControl>\n                    <PositionedSnackBar\n                        message={\"Day Created. Now add some exercises!\"}\n                        vertical={this.state.vertical}\n                        horizontal={this.state.horizontal}\n                        open={this.state.open}\n                        handleClothes={this.handleClothes}\n                    />\n                </form>\n            </div>\n\n        );\n    }\n}\nNewDayForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nconst newDayStyles = withStyles(styles)(NewDayForm)\n\nconst newDayRouterStyles = withRouter(newDayStyles);\n\nexport default connect(mapStateToProps)(newDayRouterStyles);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport MemberInfoList from '../MemberInfoList/MemberInfoList';\nimport NewDayForm from '../NewDayForm/NewDayForm';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nconst styles = theme => ({\n  root: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: theme.spacing.unit * 3,\n    justifyContent: 'center',\n    backgroundImage: \"url(\" + \"https://i2.wp.com/gxmediagy.com/wp-content/uploads/2013/11/website-background-hd-backgound-widesceen-colorful-desktop-latop-white.jpg\" + \")\",\n    backgroundRepeat: 'no-repeat',\n    backgroundPositionX: '6em',\n    backgroundPositionY: '1em',\n    backgroundAttachment: 'fixed',\n    backgroundSize: '60em',\n  },\n  title: {\n    margin: \"auto\",\n    maxWidth: 850,\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'floatLeft',\n  },\n});\n\nclass UserPage extends Component {\n  logout = () => {\n    this.props.dispatch({ type: 'LOGOUT' });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n\n        <Paper className={classes.root} elevation={10}>\n          <Typography className={classes.title} variant=\"h5\" component=\"h3\">\n            Welcome, {this.props.user.first_name}!\n        </Typography>\n          <Typography className={classes.title} variant=\"h5\" component=\"h3\">\n            Your goal is to: {this.props.user.goal}\n          </Typography>\n          <MemberInfoList />\n          <Button className={classes.title} onClick={this.logout}>Log Out</Button>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nUserPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nconst userPageStyles = withStyles(styles)(UserPage);\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(userPageStyles);\n\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst InfoPage = () => (\n  <div>\n    <p>\n      Info Page\n    </p>\n  </div>\n);\n\nexport default InfoPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport { connect } from 'react-redux';\n\nclass CustomExerciseListPopUpEdit extends React.Component {\n  state = {\n    open: false,\n    id: this.props.exercise.id,\n    title: this.props.exercise.title,\n    weight_load: this.props.exercise.weight_load,\n    rep_scheme: this.props.exercise.rep_scheme,\n  };\n\n  handleChangeFor = propertyName => event => {\n    this.setState({\n      ...this.state,\n      [propertyName]: event.target.value,\n    });\n  }\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n\n  updateState = () => {\n    this.props.dispatch({ type: 'UPDATE_LOAD', payload: this.state });\n    console.log('hey???')\n    this.handleClose();\n  }\n\n  render() {\n    return (\n      <div>\n\n        <Button color=\"secondary\" className=\"button\" onClick={this.handleClickOpen}>Make it Heavier</Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">{\"Update Title, Weight Load, Rep Scheme\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <input value={this.state.title} onChange={this.handleChangeFor('title')} />\n              <input value={this.state.weight_load} onChange={this.handleChangeFor('weight_load')} />\n              <input value={this.state.rep_scheme} onChange={this.handleChangeFor('rep_scheme')} />\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.updateState} color=\"primary\" autoFocus>\n              Track\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nCustomExerciseListPopUpEdit.propTypes = {\n  fullScreen: PropTypes.bool.isRequired,\n};\n\n\nconst mapReduxStateToProps = (reduxState) => {\n  return {\n    reduxState,\n  }\n}\n\n\nexport default connect(mapReduxStateToProps)(withMobileDialog()(CustomExerciseListPopUpEdit));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CustomExerciseListPopUpEdit from '../CustomExerciseListPop-UpEdit/CustomExerciseListPop-UpEdit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport swal from 'sweetalert2';\n\nconst styles = {\n  card: {\n    maxWidth: \"100%\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n};\nconst swalWithBootstrapButtons = swal.mixin({\n  confirmButtonClass: 'btn btn-success',\n  cancelButtonClass: 'btn btn-danger',\n  buttonsStyling: true,\n})\n\nclass CustomExerciseListItem extends Component {\n\n\n\n  deleteExercise = (exercise) => {\n    swalWithBootstrapButtons({\n      title: \"Are you sure you want to get rid of \" + exercise.title + \"?\",\n      text: \"This exercise cannot be recovered\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it',\n      cancelButtonText: 'No, cancel',\n      reverseButtons: true\n    }).then((result) => {\n      if (result.value) {\n        this.props.dispatch({ type: 'DELETE_EXERCISE', payload: exercise })\n        swalWithBootstrapButtons(\n          'Deleted!',\n          'The exercise has been deleted.',\n          'success'\n        )\n      } else if (\n        // Read more about handling dismissals\n        result.dismiss === swal.DismissReason.cancel\n      ) {\n        swalWithBootstrapButtons(\n          'Cancelled',\n          'Your exercise will remain in your profile',\n          'error'\n        )\n      }\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {this.props.exercise.title}\n          </Typography>\n          <Typography variant=\"h4\" className={classes.pos} color=\"textSecondary\">\n            Weight Load:\n          <br />\n            {this.props.exercise.weight_load} lbs\n        </Typography>\n          <Typography variant=\"h6\" component=\"h2\">\n            {this.props.exercise.rep_scheme}\n          </Typography>\n          <Typography component=\"p\">\n            {this.props.exercise.day_name}\n            <br />\n          </Typography>\n          <Typography> <CustomExerciseListPopUpEdit exercise={this.props.exercise} /> </Typography>\n        </CardContent>\n        <CardActions>\n          <Button onClick={() => this.deleteExercise(this.props.exercise)} color=\"primary\" size=\"small\"><DeleteIcon /></Button>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nCustomExerciseListItem.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst customExerciseListItemCards = withStyles(styles)(CustomExerciseListItem);\n\nconst mapStateToProps = (reduxState) => {\n  return {\n    reduxState,\n  }\n}\n\nexport default connect(mapStateToProps)(customExerciseListItemCards);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  },\n});\n\nclass DaySelector extends Component {\n  state = {\n    day_id: 0,\n  }\n  componentDidMount() {\n    this.setState({\n      labelWidth: ReactDOM.findDOMNode(this.InputLabelRef).offsetWidth,\n    });\n  }\n\n  handleSelectExerciseDay = async (event) => {\n\n    await this.setState({\n      day_id: event.target.value,\n    });\n    this.props.dispatch({ type: 'SET_SELECTED_DAY', payload: this.state.day_id })\n    console.log('DAY', this.state.day_id);\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel\n            ref={ref => {\n              this.InputLabelRef = ref;\n            }}\n            htmlFor=\"\">\n            Day</InputLabel>\n          <Select\n            value={this.props.reduxState.daysReducer.day_id}\n            onChange={this.handleSelectExerciseDay}\n          >\n            <MenuItem value={0}>View All {this.props.reduxState.user.first_name}'s Exercises</MenuItem>\n            {this.props.reduxState.daysReducer.map(day => {\n              return <MenuItem value={day.id} key={day.id}>{day.name}</MenuItem>\n            })}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nDaySelector.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nconst daySelectorDropDown = withStyles(styles)(DaySelector)\n\nexport default connect(mapStateToProps)(daySelectorDropDown);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomExerciseListItem from '../CustomExerciseListItem/CustomExerciseListItem';\nimport DaySelector from '../DaySelector/DaySelector';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter } from 'react-router';\nimport Button from '@material-ui/core/Button';\n\n\nclass DaySelectorList extends Component {\n\n    handleClick = () => {\n        this.props.history.push('createexercise')\n    }\n\n    render() {\n        let day = this.props.reduxState.daysReducer\n        return (\n            <div>\n                <Typography variant=\"h3\">\n                    Today's Exercises\n                </Typography>\n                <DaySelector />\n                <Button onClick={this.handleClick}>Create Exercise</Button>\n\n                {!this.props.reduxState.setSelectedDayReducer ? <Typography variant=\"h6\">Choose a Day From the List Above to Start Lifting</Typography> :\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-evenly\"\n                        alignItems=\"flex-start\"\n                        spacing={40}\n                        style={{ width: \"100%\" }}\n                    >\n                        {this.props.reduxState.exerciseListReducer.map(exercise => {\n                            if (exercise.day_id === this.props.reduxState.setSelectedDayReducer) {\n                                return (\n                                    <Grid item xs={12} md={6} lg={3}>\n                                        <CustomExerciseListItem key={exercise.id} exercise={exercise} />\n                                    </Grid>\n                                )\n                            }\n                        })}\n                    </Grid>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nconst daySelectorRouterList = withRouter(DaySelectorList)\n\nexport default connect(mapStateToProps)(daySelectorRouterList);\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomExerciseListItem from '../CustomExerciseListItem/CustomExerciseListItem';\nimport DaySelectorList from '../DaySelectorList/DaySelectorList';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nclass CustomExerciseList extends Component {\n    componentDidMount() {\n        this.props.dispatch({ type: 'FETCH_EXERCISES', payload: this.props.reduxState.user })\n        this.props.dispatch({ type: 'FETCH_DAYS', payload: this.props.reduxState.user })\n\n    }\n\n    render() {\n        return (\n            <div className=\"CustomExerciseListCSS\">\n                <DaySelectorList />\n                <Typography variant=\"h3\">\n                    All of {this.props.reduxState.user.first_name}'s Exercises\n                     </Typography>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"space-evenly\"\n                    alignItems=\"flex-start\"\n                    spacing={40}\n                    style={{ width: \"100%\" }}\n                >\n                    {this.props.reduxState.exerciseListReducer.map(exercise => {\n                        return (\n                            <Grid item xs={12} md={6} lg={3}>\n                                <CustomExerciseListItem key={exercise.id} exercise={exercise} />\n                            </Grid>\n                        )\n                    })}\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nexport default connect(mapStateToProps)(CustomExerciseList);\n\n{/* <td><button onClick={() => this.handleClick}>Make it Heavier</button></td> */ }\n\n\n\n","import React, { Component, Children } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n    root: {\n        width: '62%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n        //change below\n        height: 'auto',\n        margin: '20px auto',\n        padding: '2px',\n        borderRadius: '2px',\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    table: {\n        minWidth: 100,\n        marginRight: theme.spacing.unit * 4,\n    },\n    tableBody: {\n        width: 'flex',\n    },\n});\n\n\nclass MeasurementsList extends Component {\n    componentDidMount() {\n        this.props.dispatch({ type: 'FETCH_USER', payload: this.props.reduxState.user })\n        console.log('MEASUREMENTSREDUXSTATE: ', this.props.reduxState.user);\n\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow >\n                                <TableCell numeric>Body Area</TableCell>\n                                <TableCell numeric>Measurement</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody className={classes.tableBody}>\n                            {this.props.reduxState.measurementsListReducer.map(measurement => {\n                                return (\n                                    <TableRow key={measurement.id}>\n                                        <TableCell >{measurement.body_area}</TableCell>\n                                        <TableCell numeric>{measurement.measurement}''</TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        );\n    }\n}\nMeasurementsList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nconst measurementTable = withStyles(styles)(MeasurementsList);\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nexport default connect(mapStateToProps)(measurementTable);\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport NewDayForm from '../NewDayForm/NewDayForm';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport PositionedSnackbar from '../PositionedSnackBar/PositionedSnackBar';\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 4,\n        paddingBottom: theme.spacing.unit * 3,\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 'flex',\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n});\n\nclass CustomExerciseForm extends Component {\n    state = {\n        newExercise: {\n            title: '',\n            weight_load: 0,\n            rep_scheme: '',\n            day_id: 0,\n        },\n        open: false,\n        vertical: 'bottom',\n        horizontal: 'center',\n    };\n\n    handleChangeFor = propertyName => event => {\n        console.log('event logging')\n        this.setState({\n            newExercise: {\n                ...this.state.newExercise,\n                [propertyName]: event.target.value,\n            }\n        });\n    };\n    handleSelectChange = (event) => {\n        this.setState({\n            newExercise: {\n                ...this.state.newExercise,\n                day_id: Number(event.target.value),\n            }\n        });\n\n        console.log('DAY', event.target.value);\n\n    }\n\n    handleExerciseSubmit = (event) => {\n        event.preventDefault();\n        this.props.dispatch({ type: 'ADD_EXERCISE', payload: this.state.newExercise })\n        this.setState({\n            newExercise: {\n                ...this.state.newExercise,\n                title: '',\n                weight_load: 0,\n                rep_scheme: '',\n            },\n            open: true,\n        });\n        console.log('LOOOOK', this.state.newExercise);\n    };\n\n    handleClothes = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <NewDayForm />\n                <br />\n                <br />\n                <Typography variant=\"h5\" component=\"h3\">\n                    Create Your Exercise with a Title, Weight Load, Rep Scheme, and Day\n                     </Typography>\n                <form>\n                    <FormControl className={classes.container} noValidate autoComplete=\"off\">\n                        <TextField\n                            label=\"Exercise\"\n                            className={classes.textField}\n                            value={this.state.newExercise.title}\n                            onChange={this.handleChangeFor('title')}\n                            margin=\"normal\"\n                        />\n                        <TextField\n                            label=\"Weight\"\n                            className={classes.textField}\n                            value={this.state.newExercise.weight_load}\n                            onChange={this.handleChangeFor('weight_load')}\n                            margin=\"normal\"\n                        />\n                        <TextField\n                            label=\"Rep Scheme (2x15, 3x10, etc)\"\n                            className={classes.textField}\n                            value={this.state.newExercise.rep_scheme}\n                            onChange={this.handleChangeFor('rep_scheme')}\n                            margin=\"normal\"\n                        />\n                        <Select value={this.state.newExercise.day_id} onChange={this.handleSelectChange}>\n                            <MenuItem value={0}>{this.props.reduxState.user.first_name}'s next exercise</MenuItem>\n                            {this.props.reduxState.daysReducer.map(day => {\n                                return <MenuItem value={day.id} key={day.id}>{day.name}</MenuItem>\n                            })}\n                        </Select>\n                        <Button onClick={this.handleExerciseSubmit} type=\"submit\" value='Submit' color=\"primary\">Add Exercise</Button>\n                    </FormControl>\n                    <PositionedSnackbar\n                        message={\"Exercise Created. Let's do this!\"}\n                        vertical={this.state.vertical}\n                        horizontal={this.state.horizontal}\n                        open={this.state.open}\n                        handleClothes={this.handleClothes}\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nCustomExerciseForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nconst customExerciseStyles = withStyles(styles)(CustomExerciseForm)\n\n\nexport default connect(mapStateToProps)(customExerciseStyles);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport PositionedSnackBar from '../PositionedSnackBar/PositionedSnackBar';\n\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 'flex',\n    },\n    dense: {\n        marginTop: 19,\n    },\n    menu: {\n        width: 200,\n    },\n});\n\nclass MeasurementsForm extends Component {\n    state = {\n        newMeasurement: {\n            body_area: '',\n            measurement: 0,\n        },\n        open: false,\n        vertical: 'top',\n        horizontal: 'right',\n    };\n\n    handleChangeFor = propertyName => event => {\n        console.log('event logging')\n        this.setState({\n            newMeasurement: {\n                ...this.state.newMeasurement,\n                [propertyName]: event.target.value,\n            }\n        });\n    };\n\n    handleMeasurementSubmit = (event) => {\n        event.preventDefault();\n        this.props.dispatch({ type: 'ADD_MEASUREMENT', payload: this.state.newMeasurement })\n        this.setState({\n            ...this.state.newMeasurement,\n            newMeasurement: {\n                body_area: '',\n                measurement: 0,\n            },\n            open: true,\n        });\n        console.log('LOOOOK', this.state.newMeasurement);\n    };\n\n    handleClothes = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <form>\n                    <Typography variant=\"h5\" component=\"h3\">\n                        Measurements\n                   </Typography>\n                    <FormControl className={classes.container} noValidate autoComplete=\"off\">\n                        <TextField\n                            id=\"standard-name\"\n                            label=\"Body Area\"\n                            className={classes.textField}\n                            value={this.state.newMeasurement.body_area}\n                            onChange={this.handleChangeFor('body_area')}\n                            margin=\"normal\"\n                        />\n                        <TextField\n                            id=\"standard-name\"\n                            label=\"Measurement\"\n                            className={classes.textField}\n                            value={this.state.newMeasurement.measurement}\n                            onChange={this.handleChangeFor('measurement')}\n                            margin=\"normal\"\n                        />\n                        <Button onClick={this.handleMeasurementSubmit} type=\"submit\" value='Submit' color=\"primary\">Add Measurement</Button>\n                    </FormControl>\n                    <PositionedSnackBar\n                        message={\"Measurement tracked.\"}\n                        vertical={this.state.vertical}\n                        horizontal={this.state.horizontal}\n                        open={this.state.open}\n                        handleClothes={this.handleClothes}\n                    />\n                </form>\n            </div>\n        );\n    }\n}\n\nMeasurementsForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nconst measurementsStyles = withStyles(styles)(MeasurementsForm)\n\nexport default connect(mapStateToProps)(measurementsStyles);","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\nimport InfoPage from '../InfoPage/InfoPage';\nimport './App.css';\nimport CustomExerciseList from '../CustomExerciseList/CustomExerciseList';\nimport MeasurementsList from '../MeasurementsList/MeasurementsList';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport red from '@material-ui/core/colors/red';\nimport CustomExerciseForm from '../CustomExerciseForm/CustomExerciseForm';\nimport MeasurementsForm from '../MeasurementsForm/MeasurementsForm';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: deepOrange,\n    secondary: lightGreen,\n    error: red,\n  }\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' })\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <div>\n            <Nav />\n            <Switch>\n              {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n              <Redirect exact from=\"/\" to=\"/home\" />\n              {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n              <Route\n                exact\n                path=\"/about\"\n                component={AboutPage}\n              />\n              {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n              <ProtectedRoute\n                exact\n                path=\"/home\"\n                component={UserPage}\n              />\n              {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n              <ProtectedRoute\n                exact\n                path=\"/info\"\n                component={InfoPage}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/exercises\"\n                component={CustomExerciseList}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/measurements\"\n                component={MeasurementsList}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/createexercise\"\n                component={CustomExerciseForm}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/createmeasurement\"\n                component={MeasurementsForm}\n              />\n              {/* If none of the other routes matched, we will show a 404. */}\n              <Route render={() => <h1>404</h1>} />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}